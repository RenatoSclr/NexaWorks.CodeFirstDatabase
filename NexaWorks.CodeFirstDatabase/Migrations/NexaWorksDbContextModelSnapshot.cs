// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexaWorks.CodeFirstDatabase.Data;

#nullable disable

namespace NexaWorks.CodeFirstDatabase.Migrations
{
    [DbContext(typeof(NexaWorksDbContext))]
    partial class NexaWorksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.OS", b =>
                {
                    b.Property<int>("OS_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OS_Id"));

                    b.Property<string>("NomOS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OS_Id");

                    b.ToTable("OS");

                    b.HasData(
                        new
                        {
                            OS_Id = 1,
                            NomOS = "Windows"
                        },
                        new
                        {
                            OS_Id = 2,
                            NomOS = "Linux"
                        },
                        new
                        {
                            OS_Id = 3,
                            NomOS = "MacOS"
                        },
                        new
                        {
                            OS_Id = 4,
                            NomOS = "Android"
                        },
                        new
                        {
                            OS_Id = 5,
                            NomOS = "iOS"
                        });
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Produit", b =>
                {
                    b.Property<int>("Produit_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Produit_Id"));

                    b.Property<string>("NomProduit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Produit_Id");

                    b.ToTable("Produits");

                    b.HasData(
                        new
                        {
                            Produit_Id = 1,
                            NomProduit = "Trader en Herbe"
                        },
                        new
                        {
                            Produit_Id = 2,
                            NomProduit = "Maître des Investissements"
                        },
                        new
                        {
                            Produit_Id = 3,
                            NomProduit = "Planificateur d’Entraînement"
                        },
                        new
                        {
                            Produit_Id = 4,
                            NomProduit = "Planificateur d’Anxiété Sociale"
                        });
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Statut", b =>
                {
                    b.Property<int>("Statut_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Statut_Id"));

                    b.Property<bool>("EtatStatut")
                        .HasColumnType("bit");

                    b.HasKey("Statut_Id");

                    b.ToTable("Statuts");

                    b.HasData(
                        new
                        {
                            Statut_Id = 1,
                            EtatStatut = true
                        },
                        new
                        {
                            Statut_Id = 2,
                            EtatStatut = false
                        });
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Ticket", b =>
                {
                    b.Property<int>("Ticket_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ticket_Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolution")
                        .HasColumnType("datetime2");

                    b.Property<int>("OS_Id")
                        .HasColumnType("int");

                    b.Property<string>("Probleme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Statut_Id")
                        .HasColumnType("int");

                    b.Property<int>("Version_Id")
                        .HasColumnType("int");

                    b.HasKey("Ticket_Id");

                    b.HasIndex("OS_Id");

                    b.HasIndex("Statut_Id");

                    b.HasIndex("Version_Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Ticket_Id = 1,
                            DateCreation = new DateTime(2023, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 1,
                            Probleme = "L'application ne s'ouvre pas sur certaines machines Windows, affichant un message d'erreur indiquant que le fichier DLL requis est manquant.",
                            Resolution = "Installation manuelle du fichier manquant via une mise à jour du programme d'installation.",
                            Statut_Id = 1,
                            Version_Id = 2
                        },
                        new
                        {
                            Ticket_Id = 2,
                            DateCreation = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 2,
                            Probleme = "L'application plante lors de l'ajout d'un nouveau portefeuille avec des titres ayant des caractères spéciaux dans leur nom.",
                            Statut_Id = 2,
                            Version_Id = 5
                        },
                        new
                        {
                            Ticket_Id = 3,
                            DateCreation = new DateTime(2023, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 4,
                            Probleme = "Les notifications d'entraînement ne se déclenchent pas à l'heure prévue sur certains appareils Android.",
                            Resolution = "Ajustement des permissions de notifications spécifiques à Android 11+.",
                            Statut_Id = 1,
                            Version_Id = 9
                        },
                        new
                        {
                            Ticket_Id = 4,
                            DateCreation = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 3,
                            Probleme = "L'interface de l'application gèle lors de la création d'une nouvelle session de gestion de l'anxiété.",
                            Statut_Id = 2,
                            Version_Id = 11
                        },
                        new
                        {
                            Ticket_Id = 5,
                            DateCreation = new DateTime(2023, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 5,
                            Probleme = "Les utilisateurs signalent des retards dans la mise à jour des données boursières en temps réel.",
                            Resolution = "Optimisation des appels API pour réduire la latence.",
                            Statut_Id = 1,
                            Version_Id = 3
                        },
                        new
                        {
                            Ticket_Id = 6,
                            DateCreation = new DateTime(2023, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 1,
                            Probleme = "L'importation des programmes d'entraînement depuis des fichiers Excel échoue si le fichier contient plus de 100 lignes.",
                            Resolution = "Augmentation de la limite de lignes traitées et amélioration de l'algorithme d'importation.",
                            Statut_Id = 1,
                            Version_Id = 10
                        },
                        new
                        {
                            Ticket_Id = 7,
                            DateCreation = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 1,
                            Probleme = "L'application consomme une quantité excessive de mémoire lors de l'analyse de portefeuilles complexes, entraînant des ralentissements du système.",
                            Statut_Id = 2,
                            Version_Id = 6
                        },
                        new
                        {
                            Ticket_Id = 8,
                            DateCreation = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 5,
                            Probleme = "L'application ne sauvegarde pas correctement les notes prises pendant les sessions.",
                            Resolution = "Correction d'un problème de synchronisation avec iCloud.",
                            Statut_Id = 1,
                            Version_Id = 12
                        },
                        new
                        {
                            Ticket_Id = 9,
                            DateCreation = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 2,
                            Probleme = "Les graphiques interactifs ne s'affichent pas correctement sous certaines distributions Linux, rendant l'analyse visuelle des données difficile.",
                            Statut_Id = 2,
                            Version_Id = 4
                        },
                        new
                        {
                            Ticket_Id = 10,
                            DateCreation = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 5,
                            Probleme = "Les utilisateurs ne peuvent pas partager leurs programmes d'entraînement via AirDrop.",
                            Statut_Id = 2,
                            Version_Id = 9
                        },
                        new
                        {
                            Ticket_Id = 11,
                            DateCreation = new DateTime(2023, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 1,
                            Probleme = "L'application affiche des erreurs lors de la connexion au serveur de données, empêchant la récupération des statistiques de l'utilisateur.",
                            Statut_Id = 2,
                            Version_Id = 11
                        },
                        new
                        {
                            Ticket_Id = 12,
                            DateCreation = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 4,
                            Probleme = "L'authentification biométrique ne fonctionne pas sur certains appareils Android, obligeant les utilisateurs à saisir manuellement leur mot de passe.",
                            Statut_Id = 2,
                            Version_Id = 7
                        },
                        new
                        {
                            Ticket_Id = 13,
                            DateCreation = new DateTime(2023, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 3,
                            Probleme = "L'application ne parvient pas à synchroniser les données d'entraînement avec l'application Santé d'Apple.",
                            Statut_Id = 2,
                            Version_Id = 10
                        },
                        new
                        {
                            Ticket_Id = 14,
                            DateCreation = new DateTime(2023, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 3,
                            Probleme = "Des utilisateurs signalent que l'application se ferme de manière inattendue lorsqu'ils tentent de consulter l'historique des transactions.",
                            Resolution = "Correction d'un bug dans la gestion des fichiers de log.",
                            Statut_Id = 1,
                            Version_Id = 1
                        },
                        new
                        {
                            Ticket_Id = 15,
                            DateCreation = new DateTime(2023, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 4,
                            Probleme = "L'application ne parvient pas à récupérer les données de marché en temps réel, affichant à la place des données obsolètes.",
                            Statut_Id = 2,
                            Version_Id = 6
                        },
                        new
                        {
                            Ticket_Id = 16,
                            DateCreation = new DateTime(2023, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 1,
                            Probleme = "L'application plante lorsqu'un utilisateur tente de lancer une session de relaxation après une longue période d'inactivité.",
                            Statut_Id = 2,
                            Version_Id = 12
                        },
                        new
                        {
                            Ticket_Id = 17,
                            DateCreation = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 4,
                            Probleme = "Les notifications de surveillance du marché ne fonctionnent pas de manière fiable, ce qui entraîne des retards dans l'alerte des utilisateurs.",
                            Statut_Id = 2,
                            Version_Id = 4
                        },
                        new
                        {
                            Ticket_Id = 18,
                            DateCreation = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 4,
                            Probleme = "L'application ne parvient pas à suivre correctement les calories brûlées lors de l'utilisation d'appareils de fitness connectés.",
                            Resolution = "Mise à jour de l'intégration des appareils de fitness pour assurer la compatibilité avec les derniers modèles.",
                            Statut_Id = 1,
                            Version_Id = 10
                        },
                        new
                        {
                            Ticket_Id = 19,
                            DateCreation = new DateTime(2023, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 1,
                            Probleme = "Les graphiques de performance des portefeuilles ne se chargent pas correctement lorsque l'utilisateur sélectionne une période supérieure à 5 ans.",
                            Statut_Id = 2,
                            Version_Id = 7
                        },
                        new
                        {
                            Ticket_Id = 20,
                            DateCreation = new DateTime(2023, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 4,
                            Probleme = "Les notifications push ne s'affichent pas pour les rappels programmés, ce qui affecte l'efficacité du plan de gestion de l'anxiété.",
                            Statut_Id = 2,
                            Version_Id = 11
                        },
                        new
                        {
                            Ticket_Id = 21,
                            DateCreation = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 3,
                            Probleme = "Les utilisateurs signalent que l'application devient très lente lors de la navigation entre les différentes sections du tableau de bord.",
                            Statut_Id = 2,
                            Version_Id = 4
                        },
                        new
                        {
                            Ticket_Id = 22,
                            DateCreation = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 3,
                            Probleme = "L'application ne synchronise pas les données d'entraînement avec les serveurs cloud, entraînant la perte de données lorsque l'utilisateur change d'appareil.",
                            Statut_Id = 2,
                            Version_Id = 9
                        },
                        new
                        {
                            Ticket_Id = 23,
                            DateCreation = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 3,
                            Probleme = "L'application échoue à se connecter aux services bancaires en ligne, empêchant les utilisateurs d'effectuer des transferts de fonds.",
                            Statut_Id = 2,
                            Version_Id = 5
                        },
                        new
                        {
                            Ticket_Id = 24,
                            DateCreation = new DateTime(2023, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 2,
                            Probleme = "L'application ne démarre pas correctement sur certaines distributions Linux, bloquant sur l'écran de chargement.",
                            Statut_Id = 2,
                            Version_Id = 8
                        },
                        new
                        {
                            Ticket_Id = 25,
                            DateCreation = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OS_Id = 1,
                            Probleme = "Les utilisateurs signalent que le programme ne sauvegarde pas correctement les préférences d'affichage, obligeant à les reconfigurer à chaque ouverture de l'application.",
                            Statut_Id = 2,
                            Version_Id = 1
                        });
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Version", b =>
                {
                    b.Property<int>("Version_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Version_Id"));

                    b.Property<double>("Numero")
                        .HasColumnType("float");

                    b.Property<int>("Produit_Id")
                        .HasColumnType("int");

                    b.HasKey("Version_Id");

                    b.HasIndex("Produit_Id");

                    b.ToTable("Versions");

                    b.HasData(
                        new
                        {
                            Version_Id = 1,
                            Numero = 1.0,
                            Produit_Id = 1
                        },
                        new
                        {
                            Version_Id = 2,
                            Numero = 1.1000000000000001,
                            Produit_Id = 1
                        },
                        new
                        {
                            Version_Id = 3,
                            Numero = 1.2,
                            Produit_Id = 1
                        },
                        new
                        {
                            Version_Id = 4,
                            Numero = 1.3,
                            Produit_Id = 1
                        },
                        new
                        {
                            Version_Id = 5,
                            Numero = 1.0,
                            Produit_Id = 2
                        },
                        new
                        {
                            Version_Id = 6,
                            Numero = 2.0,
                            Produit_Id = 2
                        },
                        new
                        {
                            Version_Id = 7,
                            Numero = 2.1000000000000001,
                            Produit_Id = 2
                        },
                        new
                        {
                            Version_Id = 8,
                            Numero = 1.0,
                            Produit_Id = 3
                        },
                        new
                        {
                            Version_Id = 9,
                            Numero = 1.1000000000000001,
                            Produit_Id = 3
                        },
                        new
                        {
                            Version_Id = 10,
                            Numero = 2.0,
                            Produit_Id = 3
                        },
                        new
                        {
                            Version_Id = 11,
                            Numero = 1.0,
                            Produit_Id = 4
                        },
                        new
                        {
                            Version_Id = 12,
                            Numero = 1.1000000000000001,
                            Produit_Id = 4
                        });
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Ticket", b =>
                {
                    b.HasOne("NexaWorks.CodeFirstDatabase.Models.OS", "OS")
                        .WithMany("Tickets")
                        .HasForeignKey("OS_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexaWorks.CodeFirstDatabase.Models.Statut", "Statut")
                        .WithMany("Tickets")
                        .HasForeignKey("Statut_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexaWorks.CodeFirstDatabase.Models.Version", "Version")
                        .WithMany("Tickets")
                        .HasForeignKey("Version_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OS");

                    b.Navigation("Statut");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Version", b =>
                {
                    b.HasOne("NexaWorks.CodeFirstDatabase.Models.Produit", "Produit")
                        .WithMany("Versions")
                        .HasForeignKey("Produit_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.OS", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Produit", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Statut", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NexaWorks.CodeFirstDatabase.Models.Version", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
